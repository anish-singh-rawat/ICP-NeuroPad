type AgentCreationInput = record {
  image_canister : principal;
  members : vec principal;
  token_symbol : text;
  image_id : text;
  agent_name : text;
  parent_agent_canister_id : principal;
  link_of_document : text;
  cool_down_period : nat32;
  purpose : text;
  token_supply : nat32;
};
type AgentDetails = record {
  image_canister : principal;
  members : vec principal;
  proposals_count : nat32;
  token_ledger_id : LedgerCanisterId;
  token_symbol : text;
  all_agent_user : vec principal;
  agent_id : principal;
  agent_canister_id : principal;
  proposal_ids : vec text;
  image_id : text;
  agent_name : text;
  link_of_document : text;
  members_count : nat32;
  total_tokens : nat32;
  cool_down_period : nat32;
  purpose : text;
};
type LedgerCanisterId = record { id : principal };
type Result = variant { Ok : nat; Err : text };
type TokenTransferArgs = record {
  to : principal;
  from : principal;
  tokens : nat64;
};
service : (AgentCreationInput) -> {
  get_agent_detail : () -> (AgentDetails) query;
  icrc_transfer : (principal, TokenTransferArgs) -> (Result);
}
