type AgentDetails = record {
  agnet_desc : text;
  agent_canister_id : principal;
  agent_name : text;
  agent_associated_ledger : principal;
};
type AgentInput = record {
  members : vec principal;
  image_title : text;
  token_symbol : text;
  linksandsocials : vec text;
  image_content : blob;
  agent_desc : text;
  image_id : text;
  agent_name : text;
  agent_associated_ledger : principal;
  link_of_document : text;
  image_content_type : text;
  cool_down_period : nat32;
  token_name : text;
  purpose : text;
  token_supply : nat32;
  required_votes : nat32;
};
type ImageData = record { content : blob; name : text; content_type : text };
type InitialArgs = record {
  agent_canister_id : principal;
  ic_asset_canister_id : principal;
  payment_recipient : principal;
};
type MinimalProfileinput = record {
  image_title : text;
  name : text;
  image_content : blob;
  image_content_type : text;
  email_id : text;
};
type Pagination = record { end : nat32; start : nat32 };
type Profileinput = record {
  image_title : text;
  username : text;
  twitter_id : text;
  image_content : blob;
  description : text;
  website : text;
  contact_number : text;
  image_content_type : text;
  email_id : text;
  profile_img : text;
  telegram : text;
  tag_defines : vec text;
};
type ProposalValueStore = record {
  proposal_expired_at : nat64;
  minimum_threadsold : nat64;
  proposal_submitted_at : nat64;
  agent_members : vec principal;
  principal_action : principal;
  created_by : principal;
  associated_agent_canister_id : principal;
  proposal_description : text;
  proposal_id : text;
  propsal_title : text;
  required_votes : nat32;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : UserProfile; Err : text };
type Result_2 = variant { Ok; Err : text };
type UserProfile = record {
  image_canister : principal;
  post_id : vec text;
  username : text;
  twitter_id : text;
  agent_ids : vec principal;
  description : text;
  post_count : nat32;
  user_id : principal;
  website : text;
  join_agent : vec principal;
  contact_number : text;
  email_id : text;
  profile_img : text;
  telegram : text;
  submitted_proposals : nat64;
  tag_defines : vec text;
};
service : (InitialArgs) -> {
  add_proposal : (ProposalValueStore) -> (Result);
  check_user_existance : () -> (Result) query;
  create_agent : (AgentInput) -> (Result);
  create_profile : (MinimalProfileinput) -> (Result);
  get_all_agent : () -> (vec AgentDetails) query;
  get_all_agent_pagination : (Pagination) -> (vec AgentDetails) query;
  get_proposals : (Pagination) -> (vec ProposalValueStore) query;
  get_user_profile : () -> (Result_1) query;
  make_payment_and_create_agent : (AgentInput) -> (Result);
  search_agent : (text) -> (vec AgentDetails) query;
  update_profile : (Profileinput) -> (Result_2);
  upload_image : (ImageData) -> (Result);
}
